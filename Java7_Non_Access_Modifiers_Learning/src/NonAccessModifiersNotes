# Points to Remember

1. Class can be abstract, final but not static
2. Final classes cannot be inherited [extends], it can only be instantiated
   - It prevents extensibility but useful in designing LIBRARIES
   - All the variables can be marked as final including local variable
   - All the methods can be marked as final except abstract
   Ex - Thread, String class etc..
3. Final Methods cannot be overridden
4. Final Variables cannot be updated

1. Abstract classes cannot be instantiated, it can only be inherited [extends]
   - class can be marked abstract without having even single abstract method
   - if class contains one abstract method, then class is forced to be marked as ABSTRACT
2. Abstract method is about definition [i.e. it doesn't contain method body]
   - abstract method cannot be combined with STATIC nor FINAL
3. Variables cannot be marked as abstract

Note : Never use combination such as ABSTRACT FINAL, ABSTRACT STATIC

#. To verify the access, follow the below steps

1. Check Class level access

# Final Class

- If the class is default final, then any class of same package can access it members 
[Methods & Variables] only by instance not via inheritance
- If the class is public final, then any class of different package can access it members 
[Methods & Variables] only by instance not via inheritance

# Abstract Class

- If the class is default abstract, then any class of same package can access it members 
[Methods & Variables] only via inheritance not by instance 
- If the class is public abstract, then any class of different package can access it members 
[Methods & Variables] only via inheritance not by instance

# Abstract Class

2. Check Member level access [Methods & Variables]

