************************************ STRINGS **********************************************

1. Difference b/w String And String Builder Or String Buffer
- String are immutable objects where as 
String builder gives mutable 
- String methods needs to be referenced for modification where as
String builder doesn't need as it updates internally
- String consumes more memory because literal will stay in memory where as
String Builder doesn't as string object keeps updating
- String doesn't support useful methods such as insert, delete etc.. where as
String builder supports the same

2. Difference b/w String Builder And String Buffer
- String Builder is single threaded where as
String Buffer is multi threaded
- String Builder performance is high where as 
String Buffer is low as methods are synchronized
- String Builder methods are NOT synchronized in nature where as
String Buffer method are synchronized

3. Difference b/w String constant pool & Heap
> It is special memory of heap which stores the string objects which are unique where as
for heap it creates objects without any uniqueness
> Any string object is checked against string constant pool if created as literal where as
for heap it will create object every time
> String objects in pool wont be destroyed where as
string objects will be garbage collected post usage

1. Method Overloading vs Method Overriding
> Method overloading must have different arguments where as
Method overriding must have same arguments list
> Method overloading is meant for code refinement where as
Method overriding is meant for code replacement
> Method overloading can have same or different of return type where as
Method overriding is must have same return type [Except for Covariant returns]
> Method overloading can have same or different of exceptions where as
Method overriding is must have same exceptions
> Method overloading can have same or different of access where as
Method overriding is must have same access
> Method overloading can be done in same or different class where as
Method overriding is must be done in different class
> JVM decides which method to pick depending on difference in method signature where as
for method overriding, JVM decides based on the object called
> Method overloading provides programmer a way to extend the already available feature where as
Method overriding provides programmer to provide different functionality for same feature